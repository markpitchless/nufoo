#!/usr/bin/env python

import rospy;

from std_msgs.msg import Bool, Float32
from std_srvs.srv import *
from ab_pickup.srv import *

class [% class_name %](object):
    """
    A ros node to...
    """

    def __init__(self, ):
        """
        Construct a new [% class_name %], setting up it's publishers,
        subscribers, etc.
        """
        [%- FOR param IN params %]
        self.[% param.name %] = [% param.default ? '"' _ param.default _ '"' : "None" %]
        [%- END %]

        [%- FOREACH pub IN publishers %]
        self._[% pub.var_name %]_pub = rospy.Publisher("[% pub.topic%]", [% pub.msg_type %])

        [%- END %]
        [%- FOREACH sub IN subscribers %]
        self._[% sub.var_name %]_sub = rospy.Subscriber( "[% sub.topic %]", [% sub.msg_type %], self._[% sub.var_name %]_cb, queue_size=1 )

        [%- END %]

    def spin(self):
        """
        Sets the node spinning. rospy.init should have been called first.
        """
        rospy.spin();
        #while not rospy.is_shutdown():
        #    str = "hello world %s" % rospy.get_time()
        #    rospy.loginfo(str)
        #    pub.publish(String(str))
        #    rospy.sleep(1.0)
        
    [%-# Create callbacks for the subscribers setup in __init__ %]
    [%- FOREACH sub IN subscribers %]
    def _[% sub.var_name %]_cb(self, msg):
        """
        Handles incoming [% sub.msg_type %] on topic [% sub.topic %]
        """
        # @todo - do someting with msg
        pass

    [%- END %]


if __name__ == "__main__":
    try:
        rospy.init_node("[% name %]")
        node = [% class_name %]()
        node.spin()
    except rospy.ROSInterruptException:
        pass

